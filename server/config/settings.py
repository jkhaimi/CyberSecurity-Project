"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SECRET_KEY = '_#h3^7@u)4ry6p@q_%uh%0tdah_47*k0it0pobh%p-c_2b=u0n'

# FLAW 5: Security Misconfiguration
# This flaw has two different parts / flaws

DEBUG = True

ALLOWED_HOSTS = []


# 1. Debug Mode Enabled in Production: The DEBUG = True setting in a production environment may expose sensitive information and error details to users, 
# potentially aiding attackers in understanding system vulnerabilities or obtaining critical data. 
# It's recommended to set DEBUG = False in production for security reasons.

# 2. Empty Allowed Hosts List: The ALLOWED_HOSTS variable is an important security setting that specifies which hosts or domains can access the Django application. 
# Leaving this list empty (ALLOWED_HOSTS = []) in a production environment allows any host to send requests to the application, 
# leaving it vulnerable to Host Header attacks or unauthorized access. 
# It's crucial to define specific hosts that should be allowed to interact with the application.

# To fix these issues its important to set DEBUG to False (DEBUG = False) and to add the wanted domains or IP-addresses to the ALLOWED_HOSTS list.
# For example ALLOWED_HOSTS = [192.168.1.133]. I want my messenger to be accesssable to only people in my network.
# With this change, now the only people who can access the Messenger application are people using my network. 

SESSION_COOKIE_HTTPONLY = False


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
	'server.pages'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'server.config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'server.config.wsgi.application'

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
SESSION_COOKIE_SAMESITE = None




DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}




AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]




LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True




STATIC_URL = '/static/'
